{"input":{"cteatedAt":"2021-02-17T22:12:37.814Z","url":"http://www.openmobilealliance.org/release/GS/V1_0-20030612-C/","host":"www.openmobilealliance.org"},"result":{"data":[{"url":"http://www.openmobilealliance.org/release/GS/V1_0-20030612-C/OMA-ERELD-Games-Services-V1_0-20030612-C.pdf","file":"OMA-ERELD-Games-Services-V1_0-20030612-C.pdf","status":"Candidate","version":"V1.0","date":"2003-06-12","contentMediaType":"application/pdf","description":"The scope of this document is limited to the Enabler Release Definition of Games Services according to OMA Release process and the Enabler Release specification baseline listed in section 5.   2003 Open Mobile Alliance Ltd.  All Rights Reserved. Used with the permission of the Open Mobile Alliance Ltd. under the terms as stated in this document. [OMA-Template-Spec-20030824]"},{"url":"http://www.openmobilealliance.org/release/GS/V1_0-20030612-C/OMA-GamingPlatform-JavaDocs-V1_0-20030612-C.zip","file":"OMA-GamingPlatform-JavaDocs-V1_0-20030612-C.zip","status":"Candidate","version":"V1.0","date":"2003-06-12","contentMediaType":"application/zip"},{"url":"http://www.openmobilealliance.org/release/GS/V1_0-20030612-C/OMA-GamingPlatform-V1_0-20030612-C.pdf","file":"OMA-GamingPlatform-V1_0-20030612-C.pdf","status":"Candidate","version":"V1.0","date":"2003-06-12","contentMediaType":"application/pdf","description":"The potential scope of a gaming platform is enormous. A pragmatic standpoint has, therefore, been taken, where initial efforts have been concentrated in those areas that are deemed to reap most benefit for the game developer. Specifically, in the first release of the API, the following areas are addressed: • Session management: provides the identifiers that bind the user interactions into single concept of a game, provides access to the other APIs and provides the interface through which the lifecycle of game entities can be managed. Rationale: the core framework upon which all other API access is built. • Connectivity: provides the communication layers, protecting the developer from the low-level implementation details of the transport mechanism. Rationale:  network access is widely reported to cause significant rework on the part of the game developer. • Metering: provides a standard API through which the game can inform the gamingplatform of game specific billable events. Rationale: relates fundamentally to how the game is paid for and so of high importance. • Scores and Competition Management: provides the mechanisms by which the game can report and retrieve scores from the gaming platform, so allowing competitions to be run in a unified manner. Rationale: the basis upon which online communities can be built in the mobile gaming arena. • Logging: provides a standard reporting mechanism by which a game informs the gaming platform of its status. This insulates against specific formatting requirements and through the implementation of variable logging levels, assists in the troubleshooting process.  Rationale: by standardizing logging troubleshooting is simplified and thus operational costs reduced. • Timers: provides the mechanism by which a game schedules and delays activities. Rationale: provides unified access to time based event triggers for the game developer. Underlying the design of the APIs discussed in this document lays an event-based mechanism. The Session API defines the core of the event model. Although not necessary, a familiarity of event based programming will significantly help in the interpretation of this document.  The framework of APIs offers no guarantees on the re-entrancy of the event handlers. Specific game platform vendors may offer tools and reentrance conditions on top of the APIs, but this is an implementation issue, and out of the scope of this specification."},{"url":"http://www.openmobilealliance.org/release/GS/V1_0-20030612-C/OMA-GS-v1_0-20030612-C.zip","file":"OMA-GS-v1_0-20030612-C.zip","status":"Candidate","version":"V1.0","date":"2003-06-12","contentMediaType":"application/zip"}]}}