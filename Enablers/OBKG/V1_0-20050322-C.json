{"input":{"cteatedAt":"2021-02-18T12:32:25.813Z","url":"http://www.openmobilealliance.org/release/OBKG/V1_0-20050322-C/","host":"www.openmobilealliance.org"},"result":{"data":[{"url":"http://www.openmobilealliance.org/release/OBKG/V1_0-20050322-C/OMA-ERELD-OBKG-v1_0-20050322-C.pdf","file":"OMA-ERELD-OBKG-v1_0-20050322-C.pdf","status":"Candidate","version":"V1.0","date":"2005-03-22","contentMediaType":"application/pdf","description":"The scope of this document is limited to the Enabler Release Definition of On-Board Key Generation according to OMA Release process and the Enabler Release specification baseline listed in section 5."},{"url":"http://www.openmobilealliance.org/release/OBKG/V1_0-20050322-C/OMA-OBKG-v1_0-20050322-C.zip","file":"OMA-OBKG-v1_0-20050322-C.zip","status":"Candidate","version":"V1.0","date":"2005-03-22","contentMediaType":"application/zip"},{"url":"http://www.openmobilealliance.org/release/OBKG/V1_0-20050322-C/OMA-RD-OBKG-V1.0-20050322-C.pdf","file":"OMA-RD-OBKG-V1.0-20050322-C.pdf","status":"Candidate","version":"","date":"2005-03-22","contentMediaType":"application/pdf","description":"This document describes the requirements to enhance wireless PKI with on-board key generation and remote key enrollment services.  The Open Mobile Alliance continues the work of the WAP Forum to define a set of specifications to be used by service applications."},{"url":"http://www.openmobilealliance.org/release/OBKG/V1_0-20050322-C/OMA-WAP-ECMACR-V1_1-20050322-C.pdf","file":"OMA-WAP-ECMACR-V1_1-20050322-C.pdf","status":"Candidate","version":"V1.1","date":"2005-03-22","contentMediaType":"application/pdf","description":"Open Mobile Alliance (OMA) specifications are the result of continuous work to define industry-wide interoperable mechanisms for developing applications and services that are deployed over wireless communication networks. The OMA wireless markup scripting language known as ECMAScript – Mobile Profile [ESMP] is strongly based upon ECMAScript Release 3 [ECMA262]. This document specifies an object for cryptographic functionality of the ECMAScript Mobile Profile [ESMP]."},{"url":"http://www.openmobilealliance.org/release/OBKG/V1_0-20050322-C/OMA-WAP-WIM-V1_2-20050322-C.pdf","file":"OMA-WAP-WIM-V1_2-20050322-C.pdf","status":"Candidate","version":"V1.2","date":"2005-03-22","contentMediaType":"application/pdf","description":"WAP [WAPARCH] security functionality includes the Wireless Transport Layer Security [WAPWTLS], the Transport Layer Security [TLS10] and application level security, accessible using the Wireless Markup Language Script [WMLScript] and the Crypto Object [ESMPCrypto] for ECMAScript Mobile Profile [ESMP].  For optimum security, some parts of the security functionality need to be performed by a tamper-resistant device, so that an attacker cannot retrieve sensitive data. Such data is especially the permanent private keys used in the WTLS handshake with client authentication, and for making application level electronic signatures (such as confirming an application level transaction). In WTLS, also the master secrets, protecting secure sessions, are relatively long living – which could be several days. This is in order to avoid frequent full handshakes, which are relatively heavy both computationally and due to large data transfer. Master secrets are used as a source of entropy, to calculate MAC keys and message encryption keys, which are used to secure a limited number of messages, depending on usage of WTLS.   The WAP Identity Module (WIM) is used in performing WTLS, TLS and application level security functions, and especially, to store and process information needed for user identification and authentication. The functionality presented here is based on the requirement that sensitive data, especially keys, can be stored in the WIM, and all operations where these keys are involved can be performed in the WIM.  An example of a WIM implementation is a smart card. In the phone, it can be the Subscriber Identity Module (SIM) card or an external smart card. The way, which a phone and a smart card interact, is specified as a command-response protocol, using Application Protocol Data Units (APDU) specific to this application. This specification is based on ISO7816 series of standards on smart cards and the related GSM specifications [GSM11.11], where applicable.  This specification concentrates on defining an interface between the part of a WAP client device that is not considered tamper-resistant, and a tamper-resistant component, the WIM.  A basic requirement for WIM implementation is that it is tamper-resistant. This means that certain physical hardware protection is used, which makes it unfeasible to extract or modify information in the module (volatile, non-volatile memory and other parts). Technology used in smart cards is examples of this kind of protection. Regular mobile phones and PDAs cannot be considered tamper-resistant. For these devices, e.g. extracting information from the module may be difficult but still feasible with a proper equipment. This specification does not define exact requirements for tamper-resistance. Businesses can enforce certain requirements and policies using PKI based mechanisms. Applications should only accept certificates signed by Certification Authorities that are known to fulfil the requirements and policies. PKI functionality (including WTLS and TLS client authentication with private keys, and WMLScript and ECMAScript digital signatures) can be implemented in pure software in normal PDAs or phones, using password protection, encryption etc. However, such implementations cannot be considered as WIM implementations, and are out of scope of this specification. At the same time, service interfaces defined in this specification may be useful for designing internal software interfaces for these implementations."},{"url":"http://www.openmobilealliance.org/release/OBKG/V1_0-20050322-C/OMA-WAP-WPKI-V1_1-20050322-C.pdf","file":"OMA-WAP-WPKI-V1_1-20050322-C.pdf","status":"Candidate","version":"V1.1","date":"2005-03-22","contentMediaType":"application/pdf","description":"The Wireless Application Protocol (WAP) is a result of continuous work to define an industry-wide specification for developing applications that operate over wireless communication networks. The scope for the WAP Forum is to define a set of specifications to be used by service applications. The wireless market is growing very quickly, and reaching new customers and services. To enable operators and manufacturers to meet the challenges in advanced services, differentiation and fast/flexible service creation WAP Forum defines a set of protocols in transport, security, transaction, session and application layers. For additional information on the WAP architecture, please refer to “Wireless Application Protocol Architecture Specification” [WAPARCH]. WAP security functionality includes the Wireless Transport Layer Security [WTLS] and application level security, accessible using the Wireless Markup Language Script [WMLScript].  The security provided in WAP can be of various levels. In the simplest case anonymous key exchange is used for creation of an encrypted channel between server and client; in the next level a server provides a certificate mapping back to an entity trusted by the client; and finally the client itself may possess a private key and public key certificate enabling it to identify itself to other entities in the network. This document is concerned with the infrastructure and procedures required to enable the trust relationships needed for authentication of servers and clients. The term server used here is not limited to WAP gateways and origin serversbut may include third parties and content/service providers using the WAP protocols. The general model is adaptable to many certificate types including X509v3, X9.68 (currently in draft) and the certificate format defined in WTLS.  The WTLS certificate has the advantage of being very compact, easily implemented in code, and easily parsed which may be important for initial implementations of WAP clients.  In addition, to the extent possible, the WAP PKI will work interchangeably with existing X.509v3 certificates in existing Internet applications, in order to leverage the existing Internet PKIs. Any new format that requires major changes to the installed base of certificate-processing products and CA infrastructure is unlikely to be easily adopted in a short timeframe. For this reason the general model for this version is that server certificates will use the WTLS certificate format whereas client certificates will use X.509 format, but as far as possible will not be sent over the air nor stored on the client."}]}}