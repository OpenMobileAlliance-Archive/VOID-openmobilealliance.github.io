{"input":{"cteatedAt":"2021-02-17T22:12:21.827Z","url":"http://www.openmobilealliance.org/release/GPM/V1_0-20060928-C/","host":"www.openmobilealliance.org"},"result":{"data":[{"url":"http://www.openmobilealliance.org/release/GPM/V1_0-20060928-C/OMA-RD-GPM-V1_0-20060928-C.pdf","file":"OMA-RD-GPM-V1_0-20060928-C.pdf","status":"Candidate","version":"V1.0","date":"2006-09-28","contentMediaType":"application/pdf","description":"This  document  provides  use  cases  and  requirements  for  a  Global  Permissions  Management  (GPM)  enabler  that  allows  principals  to  manage  the  permission  rules  that  determine  if,  when,  how  and  to  what  extent  information  about  end-users  of  OMA enabled services (i.e. Permissions Target) is released to Target Attribute Requesters and â€“Consumers, e.g. applications, enablers or other end-users. GPM would protect information about end-users being requested by other resources as well. OMA service enablers that enable presence and location services already have specific requirements on how principal related information  is  released.  GPM  provides  generic  permissions  checking  and  permissions  management,  which  can  be  used  by  other  resources  (e.g.  OMA  service  enablers).  Therefore,  the  requirements  contained  in  this  document  are  limited  to  those  generic aspects, e.g. defining the types of permissions, the storage, management, provisioning and re-use of such permissions and of introducing the notion of notifying a Permissions Target of any changes to permissions and of getting users consent to those changes.   The scope of this RD does not include requirements for authorization to access services or service enablers. GPM specifically excludes authorization of an entity accessing another entity.  The scope of this RD is focused on determining whether a user attribute can be accessed for a particular usage, as well as the management of permissions rules and other specific functions including interaction with the user.  Note that this does not prevent the GPM enabler from making use of other generic functions or enablers when its architecture is  described  or  when  it  is  implemented,  if  they  satisfy  the  GPM  requirements.  Neither  does  it  prevent  other  enablers  from  using the GPM enabler whenever needed to perform the specific functions that the latter will provide."}]}}